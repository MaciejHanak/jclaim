<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2006, ITBS LLC. All Rights Reserved.
  ~
  ~     This file is part of JClaim.
  ~
  ~     JClaim is free software; you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation; version 2 of the License.
  ~
  ~     JClaim is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with JClaim; if not, find it at gnu.org or write to the Free Software
  ~     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  ~
  -->

<project basedir="." default="run" name="TS">
    <property file="build.properties"/>


    <property name="dir.dist" value="dist"/>
    <property name="dir.lib" value="lib"/>
    <property name="dir.java" value="java"/>
    <property name="dir.doc" value="doc"/>
    <property name="dir.classes" value="${dir.java}/classes"/>
    <property name="dir.classes.source" value="${dir.java}/classes/source"/>
    <property name="dir.ui" value="${dir.java}/ui"/>
    <property name="dir.core" value="${dir.java}/core"/>
    <property name="dir.servlet" value="${dir.java}/servlet"/>
    <property name="file.count" value="11"/>

    <property name="file.jclaim.o.jar" value="${dir.dist}/jclaim.jar"/>
    
    <property name="file.jaim.o.jar" value="${dir.dist}/jaimlib.jar"/>
    <property name="file.jaim.lib.jar" value="${dir.lib}/jaimlib.jar"/>

    <!-- JOscar -->
    <property name="file.joscar.o.jar" value="${dir.dist}/joscar-protocol.jar"/>
    <property name="file.joscar.lib.jar" value="${dir.lib}/joscar-protocol.jar"/>
    
    <property name="file.joscar-common.o.jar" value="${dir.dist}/joscar-common.jar"/>
    <property name="file.joscar-common.lib.jar" value="${dir.lib}/joscar-common.jar"/>

    <property name="file.oscar.o.jar" value="${dir.dist}/joscar-client.jar"/>
    <property name="file.oscar.lib.jar" value="${dir.lib}/joscar-client.jar"/>

    <property name="file.socks.o.jar" value="${dir.dist}/jsocks.jar"/>
    <property name="file.socks.lib.jar" value="${dir.lib}/jsocks-klea.jar"/>    
    <!-- ^^^ JOscar ^^^ -->

    <property name="file.jazzy.o.jar" value="${dir.dist}/jazzy.jar"/>
    <property name="file.jazzy.lib.jar" value="${dir.lib}/jazzy-core.eng.jar"/>

    <property name="file.smack.o.jar" value="${dir.dist}/smack.jar"/>
    <property name="file.smack.lib.jar" value="${dir.lib}/smack.jar"/>

    <property name="file.smackx.o.jar" value="${dir.dist}/smackx.jar"/>
    <property name="file.smackx.lib.jar" value="${dir.lib}/smackx.jar"/>

    <property name="file.yahoo.o.jar" value="${dir.dist}/ymsg.jar"/>
    <property name="file.yahoo.lib.jar" value="${dir.lib}/ymsg_network_v0_6.jar"/>
    
    <property name="file.openyahoo.o.jar" value="${dir.dist}/openymsg.jar"/>
    <property name="file.openyahoo.lib.jar" value="${dir.lib}/openymsg.jar"/>

    <property name="file.nate.o.jar" value="${dir.dist}/natelib.jar"/>
    <property name="file.nate.lib.jar" value="${dir.lib}/natelib.jar"/>

    <property name="file.jdic.o.jar" value="${dir.dist}/jdic.jar"/>
    <property name="file.jdic.lib.jar" value="${dir.lib}/jdic.jar"/>

    <property name="file.msn.o.jar" value="${dir.dist}/msnm.jar"/>
    <property name="file.msn.lib.jar" value="${dir.lib}/msnm.jar"/>

    <property name="file.jml.o.jar" value="${dir.dist}/jml.jar"/>
    <property name="file.jml.lib.jar" value="${dir.lib}/jml.jar"/>
    <property name="file.cindy.o.jar" value="${dir.dist}/cindy.jar"/>
    <property name="file.cindy.lib.jar" value="${dir.lib}/cindy.jar"/>
    <property name="file.commons-logging.o.jar" value="${dir.dist}/commons-logging.jar"/>
    <property name="file.commons-logging.lib.jar" value="${dir.lib}/commons-logging.jar"/>

    <property name="file.cos.o.jar" value="${dir.dist}/cos.jar"/>
    <property name="file.cos.lib.jar" value="${dir.lib}/cos.jar"/>

    <property name="file.substance.o.jar" value="${dir.dist}/substance.jar"/>
    <property name="file.substance.lib.jar" value="${dir.lib}/substance.jar"/>

    <!-- Create our packer task, if you get an error here, go get the jar file from web or the included tools/pack200 folder.
     Another way is to replace all pack tags with move (if you are building for JDK 1.4 or below. -->
    <taskdef name="pack200" classname="com.sun.tools.apache.ant.pack200.Pack200Task" classpath="lib/Pack200Task.jar"/>
    <!-- Create our unpacker task -->
    <taskdef name="unpack200" classname="com.sun.tools.apache.ant.pack200.Unpack200Task" classpath="lib/Pack200Task.jar"/>

    <!-- =====================   INCLUDES    =============================-->
    <patternset id="path.additionalfiles">
        <include name="**/*.xml"/>
        <include name="**/*.html"/>
        <include name="**/*.gif"/>
        <exclude name="**/package.html"/>
    </patternset>

    <path id="path.compile">
        <fileset dir="${dir.lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="path.compile.noui">
        <fileset dir="${dir.lib}">
            <include name="*.jar"/>
            <exclude name="jdic*.jar"/>
            <exclude name="jazz*.jar"/>
            <exclude name="jni*.jar"/>
            <!--<exclude name="cos.jar"/>-->
            <exclude name="mysql*.jar"/>
        </fileset>
    </path>

    <!-- =====================   INIT    =============================-->
    <target name="init"
        description="Do initialization tasks">
        <mkdir dir="${dir.classes}"/>
        <mkdir dir="${dir.classes.source}"/>
    </target>

    <!-- =====================   CLEAN    =============================-->
    <target name="clean" depends="init"
            description="Deletes all files that can be regenerated">

        <delete includeEmptyDirs="true">
            <fileset dir="${dir.classes.source}" includes="**/*"/>
        </delete>

        <delete file="${file.jclaim.o.jar}"/>
        <delete file="${file.jaim.o.jar}"/>
        <delete file="${file.oscar.o.jar}"/>
        <delete file="${file.joscar-common.o.jar}"/>
        <delete file="${file.joscar.o.jar}"/>
        <delete file="${file.jazzy.o.jar}"/>
        <delete file="${file.smack.o.jar}"/>
        <delete file="${file.smackx.o.jar}"/>
        <delete file="${file.jdic.o.jar}"/>
        <delete file="${file.yahoo.o.jar}"/>
        <delete file="${file.openyahoo.o.jar}"/>
        <delete file="${file.nate.o.jar}"/>
        <delete file="${file.msn.o.jar}"/>
        <delete file="${file.jml.o.jar}"/>
        <delete file="${file.cindy.o.jar}"/>
        <delete file="${file.commons-logging.o.jar}"/>
        <delete file="${file.cos.o.jar}"/>
        <delete file="${file.socks.o.jar}"/>
        <delete file="${file.substance.o.jar}"/>
    </target>

    <!-- =====================   COPY    =============================-->
    <!-- copy required non-class files to the classes directory -->
    <target name="copy" depends="init">
        <copy todir="${dir.classes.source}">
            <fileset dir="${dir.ui}">
                <patternset refid="path.additionalfiles"/>
            </fileset>
        </copy>
    </target>

    <!-- =====================   COMPILE    =============================-->
    <target name="compile" depends="copy" description="Compiles all classes">
        <!--First - do model -->
        <javac srcdir="${dir.servlet}"
                destdir="${dir.classes.source}"
                debug="on"
                deprecation="off"
                optimize="on"
                target="1.5"
                source="1.5"
            >
            <classpath refid="path.compile.noui"/>
            <include name="**/*.java"/>
        </javac>
        <javac srcdir="${dir.core}"
                destdir="${dir.classes.source}"
                debug="on"
                deprecation="on"
                optimize="on"
                target="1.5"
                source="1.5"
            >
            <classpath refid="path.compile.noui"/>
            <include name="**/*.java"/>
        </javac>
        <javac srcdir="${dir.ui}"
                destdir="${dir.classes.source}"
                debug="on"
                deprecation="on"
                optimize="on"
                target="1.5"
                source="1.5"
            >
            <classpath refid="path.compile"/>
            <include name="**/*.java"/>
        </javac>

        <!--antcall target="checkstyle_plain"/-->
    </target>

    <!-- =====================   JAR    =============================-->
    <target name="jar"
        description="Jars all"
        depends="compile">
        <jar destfile="${file.jclaim.o.jar}"
            basedir="${dir.classes.source}"
            includes="**/*"
            excludes="**/server/**/*"
            />
    </target>


    <target name="sign" depends="jar">

        <pack200 src="${file.jclaim.o.jar}" destfile="${file.jclaim.o.jar}"	repack="true"/>
        <!-- Getting an error here means you did not create your own cert file.  Please do so using createcert target. -->
        <signjar jar="${file.jclaim.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>
        <!--<move file="${file.jclaim.o.jar}" tofile="${file.jclaim.o.jar}"/>-->

        <!--<copy file="${file.jaim.lib.jar}" tofile="${file.jaim.o.jar}"/>-->
        <pack200 src="${file.jaim.lib.jar}" destfile="${file.jaim.o.jar}"	repack="true"/>
        <signjar jar="${file.jaim.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.joscar.lib.jar}" destfile="${file.joscar.o.jar}"	repack="true"/>
        <signjar jar="${file.joscar.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.joscar-common.lib.jar}" destfile="${file.joscar-common.o.jar}"	repack="true"/>
        <signjar jar="${file.joscar-common.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.oscar.lib.jar}" destfile="${file.oscar.o.jar}"	repack="true"/>
        <signjar jar="${file.oscar.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.smack.lib.jar}" destfile="${file.smack.o.jar}"	repack="true"/>
        <signjar jar="${file.smack.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.smackx.lib.jar}" destfile="${file.smackx.o.jar}"	repack="true"/>
        <signjar jar="${file.smackx.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.yahoo.lib.jar}" destfile="${file.yahoo.o.jar}"	repack="true"/>
        <signjar jar="${file.yahoo.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.openyahoo.lib.jar}" destfile="${file.openyahoo.o.jar}"	repack="true"/>
        <signjar jar="${file.openyahoo.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.nate.lib.jar}" destfile="${file.nate.o.jar}"	repack="true"/>
        <signjar jar="${file.nate.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.jdic.lib.jar}" destfile="${file.jdic.o.jar}"	repack="true"/>
        <signjar jar="${file.jdic.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.msn.lib.jar}" 	destfile="${file.msn.o.jar}"	repack="true"/>
        <signjar jar="${file.msn.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.jml.lib.jar}" 	destfile="${file.jml.o.jar}"	repack="true"/>
        <signjar jar="${file.jml.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>
        <pack200 src="${file.cindy.lib.jar}" 	destfile="${file.cindy.o.jar}"	repack="true"/>
        <signjar jar="${file.cindy.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>
        <pack200 src="${file.commons-logging.lib.jar}" 	destfile="${file.commons-logging.o.jar}"	repack="true"/>
        <signjar jar="${file.commons-logging.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.cos.lib.jar}" destfile="${file.cos.o.jar}"	repack="true"/>
        <signjar jar="${file.cos.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.socks.lib.jar}" destfile="${file.socks.o.jar}"	repack="true"/>
        <signjar jar="${file.socks.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.substance.lib.jar}" destfile="${file.substance.o.jar}"	repack="true"/>
        <signjar jar="${file.substance.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>

        <pack200 src="${file.jazzy.lib.jar}" destfile="${file.jazzy.o.jar}"	repack="true"/>
        <signjar jar="${file.jazzy.o.jar}" alias="${alias}" keystore="${file.keystore}"  storepass="${storepar}"/>
    </target>

    <target name="signnative" description="Signs native files" >
        <signjar jar="${dir.dist}/lib/linux/jdic_stub.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
        <signjar jar="${dir.dist}/lib/linux/native.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
        <signjar jar="${dir.dist}/lib/win32/jdic_stub.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
        <signjar jar="${dir.dist}/lib/win32/jdic_misc.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
        <signjar jar="${dir.dist}/lib/win32/native.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
        <signjar jar="${dir.dist}/lib/mac/jdic_misc.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
        <signjar jar="${dir.dist}/lib/sunos/jdic_stub.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
        <signjar jar="${dir.dist}/lib/sunos/nativex86.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
        <signjar jar="${dir.dist}/lib/sunos/nativesparc.jar" alias="itbs" keystore="${file.keystore}"  storepass="${storepar}"/>
    </target>

    <!-- =====================   JAVADOC    =============================-->
	
	<target name="javadoc" depends="compile" description="Generate JavaDoc for the code tree">
		<tstamp>
			<format property="TODAY_US" pattern="d-MMMM-yyyy" locale="en"/>
		</tstamp>
		
		<javadoc
        	destdir="${dir.doc}"
           	author="true" version="true" use="true"
			windowtitle="JCLAIM - Code API">

			<classpath refid="path.compile"/>
			
    		<packageset dir="${dir.core}" defaultexcludes="yes">
				<include name="*/**"/>
				<exclude name="*.xml"/>
				<exclude name="*.xsl"/>
			</packageset>

    		<packageset dir="${dir.servlet}" defaultexcludes="yes">
				<include name="*/**"/>
				<exclude name="*.xml"/>
				<exclude name="*.xsl"/>
			</packageset>
			
    		<packageset dir="${dir.ui}" defaultexcludes="yes">
				<include name="*/**"/>
				<exclude name="*.xml"/>
				<exclude name="*.xsl"/>
			</packageset>

			<doctitle><![CDATA[<h2>JClaim - API</h2>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; ${TODAY_US} ITBS LLC. All Rights Reserved.</i>]]></bottom>

	    </javadoc>
    </target>

    <!-- =====================   RUN    =============================-->
    <path id="run.classpath">
        <fileset dir="${dir.dist}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${dir.lib}">
            <include name="*.jar"/>
        </fileset>
    </path>
    <property name="classpath" value="run.classpath"/>
    
    <target name="run"
        description="Starts client">

        <java fork="yes" classname="com.itbs.aimcer.gui.Main">
            <env key="PATH" path="${dir.lib}"/>
            <jvmarg value="-Djava.library.path=${dir.lib}"/>

            <!--jvmarg value="${dir.lib}"/-->
            <classpath refid="${classpath}"/>
        </java>
    </target>

    <!-- =====================   USAGE   ============================= -->
    <target name="usage"
        description="Describes targets">

        <java classname="org.apache.tools.ant.Main">
            <arg value="-projecthelp" />
        </java>
    </target>
 </project>
    